@inject IConfiguration config

<InputFile OnChange="@LoadFiles" accept=".png,.jpg,.jpeg,.webp,.tiff"
           class="form-control" />

@if (errors.Count > 0)
{
    <h3>Errors</h3>
    <ul class="text-danger">
        @foreach (var error in errors)
        {
            <li>@error</li>
        }
    </ul>
}

@code {
    private long maxFileSize = 1024 * 1024 * 3; //3MB
    private List<string> errors = new();

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        try
        {

            errors.Clear();

            var file = e.File;
            string newFileName = Path.ChangeExtension(
                Path.GetRandomFileName(),
                Path.GetExtension(file.Name));

            string path = Path.Combine(
                config.GetValue<string>("FileStorage")!,
                "jmedina",
                newFileName);

            Directory.CreateDirectory(Path.Combine(
               config.GetValue<string>("FileStorage")!,
               "jmedina"));


            //uploading files
            await using FileStream fs = new(path, FileMode.Create);
            await file.OpenReadStream(maxFileSize).CopyToAsync(fs);

        }
        catch (Exception ex)
        {
            errors.Add($"File: Error: {ex.Message}");
        }
    }

}
